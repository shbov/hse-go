version: '3'
services:
  build:
    image: build:develop
    build:
      context: "."
      dockerfile: ".docker/build.Dockerfile"

  auth:
    build:
      context: "."
      dockerfile: ".docker/auth.Dockerfile"
    restart: unless-stopped
    depends_on:
      build:
        condition: service_completed_successfully
      auth_db:
        condition: service_healthy
    volumes:
      - './.config/auth.docker.yaml:/app/config.yaml'
      - './migrations/auth/:/app/migrations/auth'
    ports:
      - "80:80"
      - "9000:9000"

  auth_db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      PGUSER: usr
      POSTGRES_DB: auth
      POSTGRES_USER: usr
      POSTGRES_PASSWORD: authpwd
    healthcheck:
      test: "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./deployments/prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./deployments/grafana:/etc/grafana/provisioning/datasources

  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  otel-collector:
    image: otel/opentelemetry-collector:0.88.0
    restart: always
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./deployments/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus' metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one

volumes:
  prom_data:
